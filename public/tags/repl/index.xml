<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>REPL on Alex' Blog</title><link>http://localhost:1313/tags/repl/</link><description>Recent content in REPL on Alex' Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 29 Sep 2024 20:49:33 +0200</lastBuildDate><atom:link href="http://localhost:1313/tags/repl/index.xml" rel="self" type="application/rss+xml"/><item><title>Using one bpython with multiple virtual environments</title><link>http://localhost:1313/posts/bpython-with-multiple-virtual-environments/</link><pubDate>Sun, 29 Sep 2024 20:49:33 +0200</pubDate><guid>http://localhost:1313/posts/bpython-with-multiple-virtual-environments/</guid><description>&lt;p>I finally realized that I should change the default Python REPL. There are many REPLs that offer a much better experience—&lt;a href="https://ipython.org/">ipython&lt;/a>, &lt;a href="https://bpython-interpreter.org/">bpython&lt;/a>, and &lt;a href="https://github.com/prompt-toolkit/ptpython">ptpython&lt;/a> are probably the most well-known. In the past, I used ipython because I worked on many projects that involved Jupyter notebooks, so it came essentially for free whenever I installed the necessary packages.&lt;/p>
&lt;p>However, in recent years, I&amp;rsquo;ve been working on a lot of projects that don&amp;rsquo;t rely on Jupyter, meaning ipython wasn’t installed by default. This meant I always had to manually install it in any virtual environment where I wanted to use it—which I didn’t like, as I prefer to keep only project-specific dependencies in a virtual environment.&lt;/p></description></item></channel></rss>